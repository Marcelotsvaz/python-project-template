[build-system]
	build-backend = 'setuptools.build_meta'
	requires = [
		'setuptools == 68.2.0',
		'wheel == 0.41.2',
	]



[project]
	name = 'python-template'
	version = '0.1.0'
	description = 'Template for a Python application/library project.'
	readme = 'readme.md'
	license = { file = 'unlicense.txt' }
	authors = [
		{ name = 'Marcelo Vaz', email = 'marcelotsvaz@gmail.com' },
	]
	requires-python = '>= 3.11'
	classifiers = [
		'Programming Language :: Python :: 3',
		'Operating System :: OS Independent',
		'License :: OSI Approved :: The Unlicense (Unlicense)',
	]
	dependencies = [
		# 'some-package >= 1.2.3',
	]
	optional-dependencies.dev = [
		'pylint >= 2.17.5',
	]
	
	
	[project.scripts]
		python-template = 'python_template.cli:main'



[tool.setuptools]
	packages.find.include = [ 'python_template' ]
	package-data.python_template = [ 'py.typed' ]



[tool.pyright]
	typeCheckingMode = 'strict'
	reportUnnecessaryTypeIgnoreComment = true
	reportUnknownLambdaType = false



[tool.pylint]
	indent-string = '	'
	disable = [
		'trailing-whitespace',
		'missing-final-newline',
		'too-few-public-methods',
	]
	
	# Naming.
	variable-naming-style = 'camelCase'
	inlinevar-naming-style = 'camelCase'
	function-naming-style = 'camelCase'
	argument-naming-style = 'camelCase'
	method-naming-style = 'camelCase'
	class-attribute-naming-style = 'camelCase'
	attr-naming-style = 'camelCase'
	
	# Naming (unchanged).
	module-naming-style = 'snake_case'
	class-naming-style = 'PascalCase'
	const-naming-style = 'UPPER_CASE'
	class-const-naming-style = 'UPPER_CASE'
	
	# Exceptions for tests.
	no-docstring-rgx = '^__|.+Tests$|^test|^[Ff]oo$|^[Bb]ar$'
	dummy-variables-rgx = '^(_|[Ff]oo|[Bb]ar)$'
	bad-names = []