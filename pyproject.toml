[project]
	name = 'python-template'
	version = '0.1.0'
	description = 'Template for a Python application/library project.'
	readme = 'readme.md'
	license = { file = 'unlicense.txt' }
	authors = [
		{ name = 'Marcelo Vaz', email = 'marcelotsvaz@gmail.com' },
	]
	requires-python = '>= 3.11'
	classifiers = [
		'Programming Language :: Python :: 3',
		'Operating System :: OS Independent',
		'License :: OSI Approved :: The Unlicense (Unlicense)',
	]
	dependencies = [
		'django >= 4.2.5',	# Example.
	]
	optional-dependencies.json = [
		'jsons >= 1.6.3',	# Example.
	]
	
	
	[project.scripts]
		python-template = 'python_template.cli:main'



# 
# Building.
#-------------------------------------------------------------------------------
[build-system]
	build-backend = 'pdm.backend'
	requires = [ 'pdm-backend' ]



[tool.pdm]
	build.custom-hook = 'build/build_hooks.py'
	dev-dependencies.dev = [
		'coverage >= 7.3.1',
		'pdm-backend >= 2.1.6',
		'pylint >= 2.17.5',
	]



# 
# Tools.
#-------------------------------------------------------------------------------
[tool.pyright]
	typeCheckingMode = 'strict'
	reportUnnecessaryTypeIgnoreComment = true
	reportUnknownLambdaType = false



[tool.pylint]
	indent-string = '	'
	disable = [
		'trailing-whitespace',
		'missing-final-newline',
		'too-few-public-methods',
	]
	
	# Naming.
	variable-naming-style = 'camelCase'
	inlinevar-naming-style = 'camelCase'
	function-naming-style = 'camelCase'
	argument-naming-style = 'camelCase'
	method-naming-style = 'camelCase'
	class-attribute-naming-style = 'camelCase'
	attr-naming-style = 'camelCase'
	
	# Naming (unchanged).
	module-naming-style = 'snake_case'
	class-naming-style = 'PascalCase'
	const-naming-style = 'UPPER_CASE'
	class-const-naming-style = 'UPPER_CASE'
	
	# Exceptions for tests.
	no-docstring-rgx = '^__|.+Tests$|^test|^[Ff]oo$|^[Bb]ar$'
	dummy-variables-rgx = '^(_|[Ff]oo|[Bb]ar)$'
	bad-names = []



[tool.coverage]
	run.source_pkgs = [ 'python_template' ]
	run.data_file = '.staging/coverage'
	
	report.precision = 2
	report.skip_covered = true
	report.show_missing = true
	
	xml.output = '.staging/coverage.xml'